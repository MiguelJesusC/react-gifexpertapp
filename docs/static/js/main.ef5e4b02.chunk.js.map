{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","Components/GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","console","log","json","data","gifs","map","element","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","img","useFetch","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,cAAkB,EAEPC,mBAAS,IAFF,mBAEpCC,EAFoC,KAExBC,EAFwB,KAgB3C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdpB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,OAGnBC,QAAQC,IAAIF,GAHO,SAIIA,EAAKG,OAJT,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAY,IAAD,EAC7B,MAAQ,CACJC,GAAID,EAAQC,GACZC,MAAOF,EAAQE,MACfZ,IAAG,UAAEU,EAAQG,cAAV,aAAE,EAAgBC,iBAAiBd,QAT3B,kBAYZQ,GAZY,4CAAH,sDCCPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOZ,EAAU,EAAVA,IAErC,OACI,yBAAKgB,UAAU,qCACX,yBAAKC,IAAKjB,EAAKkB,IAAKN,IACpB,+BAAKA,EAAL,OCFCO,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECFjB,SAACA,GAAa,IAAD,EAEPd,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAJoB,mBAE1BC,EAF0B,KAEnBC,EAFmB,KAiBjC,OAVAC,qBAAW,WACP1B,EAASC,GACR0B,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,CAACtB,IAEGuB,EDbyBK,CAAS5B,GAA5Be,EAFwB,EAE7BN,KAAYa,EAFiB,EAEjBA,QAEpB,OACI,kBAAC,WAAD,KACI,wBAAIJ,UAAU,qCAAqClB,GAClDsB,GAAW,uBAAGJ,UAAU,oCAAb,WACZ,yBAAKA,UAAU,aACX,4BAEQH,EAAOJ,KAAI,SAAAgB,GAAG,OACV,kBAAC,EAAD,eACIE,IAAKF,EAAId,IACLc,WEfvBG,EAAe,WAAO,IAAD,EAEM5C,mBAAS,CAAC,WAFhB,mBAEvB6C,EAFuB,KAEX9C,EAFW,KAU9B,OACI,oCACI,8CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BAEA,4BAEQ8C,EAAWpB,KAAK,SAAAX,GAAQ,OAAK,kBAAC,EAAD,CACzB6B,IAAK7B,EACLA,SAAUA,UClBlCgC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.ef5e4b02.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) =>{\r\n    \r\n    const [inputValue, setInputValue] = useState('')\r\n    \r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [ inputValue, ...cats])\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return( \r\n        <form onSubmit={handleSubmit}> \r\n            <input type=\"text\" value={inputValue} onChange={handleInputChange}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories:PropTypes.func.isRequired\r\n}","\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=myKXFvf8Q0UXbJRK1n7QI55A2d78QpRO`\r\n    const resp = await fetch(url);\r\n    console.log(resp)\r\n    const { data } = await resp.json()\r\n    const gifs = data.map(element => {\r\n        return ({\r\n            id: element.id,\r\n            title: element.title,\r\n            url: element.images?.downsized_medium.url\r\n        })\r\n    });\r\n    return gifs\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n    return (\r\n        <div className=\"animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}  ","import React, { Fragment } from 'react';\r\nimport { useFetch } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images,loading } = useFetch(category)\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2 className=\"animate__animated animate__fadeIn\">{category}</h2>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n                <ol>\r\n                    {\r\n                        images.map(img => (\r\n                            <GifGridItem\r\n                                key={img.id}\r\n                                {...img}\r\n                            />\r\n                        ))\r\n                    }\r\n                </ol>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}","import {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetch = (category) =>{\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () =>{\r\n        getGifs( category )\r\n        .then( img => {\r\n            setState({\r\n                data: img,\r\n                loading: false\r\n            })\r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['Naruto'])\r\n\r\n    // const handleAdd = () => {\r\n        \r\n    //     // setCategories([...categories, 'Shingeki no Kyojin'])\r\n    //     setCategories(categories.concat('Shingeki no Kyojin'))\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2> GifExpertApp </h2>\r\n            <AddCategory setCategories = {setCategories}/>\r\n            <hr />\r\n            \r\n            <ol> \r\n                {\r\n                    categories.map( category =>( <GifGrid \r\n                        key={category}\r\n                        category={category}\r\n                    />))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport {GifExpertApp} from './Components/GitExpertApp'\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}